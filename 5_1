/*
 * 5_1. MSD для строк.
Дан массив строк. Количество строк не больше 105. Отсортировать массив методом поразрядной сортировки MSD по символам. Размер алфавита - 256 символов. Последний символ строки = ‘\0’.
*/


#include <iostream>
#include <vector>


template <typename T>
void memcpy(T* in, T* b, int n){
    for( int i = 0; i < n; ++i ) {
        in[i]=b[i];
    }
}

template <typename T, typename Z>
void CountingSort(T* in, int n, int* c, int byte, int alphabet, void (*memcpy)(T*, T*, int), Z zero ) {
    for( int i = 0; i < alphabet+1; ++i )
        c[i] = 0;
    for( int i = 0; i < n; ++i )
        c[in[i][byte]-zero]++;
    for (int i=1; i<alphabet+1; ++i){
        c[i]+=c[i-1];
    }


    T* b = new T[n];

    for (int i=n-1; i>=0; --i){
        b[--c[in[i][byte]-zero]]=in[i];
    }

    memcpy(in, b, n);

    delete [] b;
}


template <typename T, typename Z>
void MSDSort(T* in, int n, int byte, int max, int alphabet, void (*p)(T*, T*, int), Z zero) {
    if( n <= 1 )
        return;
    int* c = new int[alphabet+1];
    CountingSort(in, n, c, byte, alphabet, p, zero);
    if( byte < max ) {
        for( int i = 1; i < 256; ++i )
            MSDSort(in+c[i], c[i+1]-c[i], byte+1, max, alphabet, p, zero);

    }

    delete[] c;
}

int main() {
    std::vector<std::string> in;


    std::string s;
    std::getline(std::cin, s);

    while(s!=""){
        in.push_back(s);
        std::getline(std::cin, s);
    }

    int n=in.size();

    std::string* input=new std::string[n];
    for(int i=0;i<n;i++){
        input[i]=in[i];
    }



    int max=input[0].size();

    for(int i=1;i<n;i++){
        if(max<input[i].size()) max=input[i].size();
    }

    char zero='\0';
    void (*p)(std::string* , std::string* , int ) = &memcpy;
    int alphabet=256;
    MSDSort(input, n, 0, max, alphabet, p, zero);

    for(int i=0;i<n;i++){
        std::cout << input[i] <<"\n";
    }

    delete [] input;


    return 0;
}
